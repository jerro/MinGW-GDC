From 65f8a9b6b5fa8efc2fa6d1fd3841146ed096eff1 Mon Sep 17 00:00:00 2001
From: Daniel Green <venix1@gmail.com>
Date: Thu, 14 Nov 2013 19:25:03 -0600
Subject: [PATCH] MinGW64 corrections.

---
 libphobos/libdruntime/core/sys/windows/mingwasm.S  | 36 ++++++++++++++
 libphobos/libdruntime/core/sys/windows/threadaux.d |  9 +++-
 libphobos/src/std/format.d                         | 56 +++++++++++++++-------
 libphobos/src/std/math.d                           | 15 ++++--
 4 files changed, 94 insertions(+), 22 deletions(-)

diff --git a/libphobos/libdruntime/core/sys/windows/mingwasm.S b/libphobos/libdruntime/core/sys/windows/mingwasm.S
index 49b5918..16cf089 100644
--- a/libphobos/libdruntime/core/sys/windows/mingwasm.S
+++ b/libphobos/libdruntime/core/sys/windows/mingwasm.S
@@ -3,6 +3,39 @@
  */
  	.global	_fiber_switchContext
 _fiber_switchContext:
+#if defined(__x86_64__)
+	// save current stack state
+    pushq %RBP;
+    movq  %RSP, %RBP;
+    pushq %RBX;
+    pushq %R12;
+    pushq %R13;
+    pushq %R14;
+    pushq %R15;
+    pushq %GS:0;
+    pushq %GS:8;
+    pushq %GS:16;
+	
+	// store oldp
+    movq %RSP, (%RCX);
+    // load newp to begin context switch
+    movq %RDX, %RSP;
+
+    // load saved state from new stack
+    popq %GS:16;
+	popq %GS:8;
+    popq %GS:0;
+    popq %R15;
+    popq %R14;
+    popq %R13;
+    popq %R12;
+    popq %RBX;
+    popq %RBP;
+
+	// 'return' to complete switch
+    popq %RCX;
+    jmp *%RCX;
+#elif defined(__x86__)
 	// Save current stack state.save current stack state
 	// Standard CDECL prologue.  
 	push %EBP;
@@ -33,3 +66,6 @@ _fiber_switchContext:
 
     // 'return' to complete switch
     ret;
+#else
+// assert?
+#endif
\ No newline at end of file
diff --git a/libphobos/libdruntime/core/sys/windows/threadaux.d b/libphobos/libdruntime/core/sys/windows/threadaux.d
index 44559d0..8b3faee 100644
--- a/libphobos/libdruntime/core/sys/windows/threadaux.d
+++ b/libphobos/libdruntime/core/sys/windows/threadaux.d
@@ -186,7 +186,14 @@ private:
             else version(Win64)
             {
                 version(GNU_InlineAsm)
-                    static assert(false, "unsupported");
+				{
+					void** teb;
+					asm
+					{
+                        "movq %%gs:0x30, %0;" : "=r" teb;					
+					}
+					return teb;
+				}
                 else
                     asm
                     {
diff --git a/libphobos/src/std/format.d b/libphobos/src/std/format.d
index 12990a6..70fe979 100644
--- a/libphobos/src/std/format.d
+++ b/libphobos/src/std/format.d
@@ -4838,16 +4838,24 @@ void doFormat(void delegate(dchar) putc, TypeInfo[] arguments, va_list argptr)
             //doFormat(putc, (&valti)[0 .. 1], p);
             version (Win64)
             {
-                void* q = void;
-
-                if (tsize > 8 && m != Mangle.Tsarray)
-                {   q = p;
-                    argptr = &q;
+				version(MinGW)
+                {   __va_list va;
+                    va.stack_args = p;
+                    argptr = *cast(va_list*) &va;
                 }
-                else
-                argptr = p;
-                formatArg('s');
-                p += tsize;
+				else 
+				{
+					void* q = void;
+
+					if (tsize > 8 && m != Mangle.Tsarray)
+					{   q = p;
+						argptr = *cast(va_list*)&q;
+					}
+					else
+						argptr = *cast(va_list*)p;
+					formatArg('s');
+					p += tsize;
+				}
             }
             else
             {
@@ -4907,13 +4915,21 @@ void doFormat(void delegate(dchar) putc, TypeInfo[] arguments, va_list argptr)
                     argptr = cast(va_list) pkey;
                 else version (Win64)
                 {
-                    void* q = void;
-                    if (keysize > 8 && m != Mangle.Tsarray)
-                    {   q = pkey;
-                        argptr = &q;
-                    }
-                    else
-                        argptr = pkey;
+					version(MinGW)
+					{   __va_list va;
+						va.stack_args = pkey;
+						argptr = *cast(va_list*) &va;
+					}
+					else 
+					{
+						void* q = void;
+						if (keysize > 8 && m != Mangle.Tsarray)
+						{   q = pkey;
+							argptr = *cast(va_list*)&q;
+						}
+						else
+							argptr = pkey;
+					}
                 }
                 else version (X86_64)
                 {   __va_list va;
@@ -4936,6 +4952,13 @@ void doFormat(void delegate(dchar) putc, TypeInfo[] arguments, va_list argptr)
                     argptr = cast(va_list) pvalue;
                 else version (Win64)
                 {
+				version( MinGW )
+                {   __va_list va2;
+                    va2.stack_args = pvalue;
+                    argptr = *cast(va_list*) &va2;
+                }
+				else
+				{
                     void* q2 = void;
                     auto valuesize = valti.tsize;
                     if (valuesize > 8 && m != Mangle.Tsarray)
@@ -4944,6 +4967,7 @@ void doFormat(void delegate(dchar) putc, TypeInfo[] arguments, va_list argptr)
                     }
                     else
                         argptr = pvalue;
+				}
                 }
                 else version (X86_64)
                 {   __va_list va2;
diff --git a/libphobos/src/std/math.d b/libphobos/src/std/math.d
index 1f3bdb3..ed8118d 100644
--- a/libphobos/src/std/math.d
+++ b/libphobos/src/std/math.d
@@ -65,6 +65,11 @@
  */
 module std.math;
 
+// Win64 is used in conjunction with inline assembly.
+// MinGW doesn't support that.
+version(Win64) version(D_InlineAsm_X86_64) 
+	version = Win64_InlineAsm;
+
 import core.stdc.math;
 import std.range, std.traits;
 
@@ -2185,7 +2190,7 @@ unittest
  */
 int ilogb(real x)  @trusted nothrow
 {
-    version (Win64)
+    version (Win64_InlineAsm)
     {
         asm
         {
@@ -2722,7 +2727,7 @@ unittest
  */
 real logb(real x) @trusted nothrow
 {
-    version (Win64)
+    version (Win64_InlineAsm)
     {
         asm
         {
@@ -2976,7 +2981,7 @@ unittest
  */
 real ceil(real x)  @trusted pure nothrow
 {
-    version (Win64)
+	version (Win64_InlineAsm)
     {
         asm
         {
@@ -3029,7 +3034,7 @@ unittest
  */
 real floor(real x) @trusted pure nothrow
 {
-    version (Win64)
+    version (Win64_InlineAsm)
     {
         asm
         {
@@ -3374,7 +3379,7 @@ version(Posix)
  */
 real trunc(real x) @trusted nothrow
 {
-    version (Win64)
+    version (Win64_InlineAsm)
     {
         asm
         {
-- 
1.8.1.msysgit.1

